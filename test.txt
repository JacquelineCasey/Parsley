Parsley % cargo test
warning: unused import: `std::iter`
 --> src/parse.rs:6:5
  |
6 | use std::iter;
  |     ^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: function `indent` is never used
 --> src/utils.rs:6:8
  |
6 | pub fn indent() -> String {
  |        ^^^^^^
  |
  = note: `#[warn(dead_code)]` on by default

warning: `parsley` (lib) generated 2 warnings
warning: function `parsing_does_not_explode_color` is never used
   --> src/parse.rs:299:8
    |
299 |     fn parsing_does_not_explode_color() {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: function `parsing_does_not_explode_optional` is never used
   --> src/parse.rs:314:8
    |
314 |     fn parsing_does_not_explode_optional() {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `indent` is never used
 --> src/utils.rs:6:8
  |
6 | pub fn indent() -> String {
  |        ^^^^^^

warning: `parsley` (lib test) generated 4 warnings (1 duplicate)
    Finished test [unoptimized + debuginfo] target(s) in 0.01s
     Running unittests src/lib.rs (target/debug/deps/parsley-0299390ceeaa0e69)

running 4 tests
test define::tests::test_tokenize ... ok
test define::tests::test_parse_rule ... ok
test define::tests::test_define_parser ... ok
test parse::tests::parsing_does_not_explode_many ... FAILED

failures:

---- parse::tests::parsing_does_not_explode_many stdout ----
    resolve_to_terminals GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: NoData }
        resolve_to_terminals GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
            resolve_to_terminals GSSNode { expr: Many(Terminal(CharToken { token_type: "a" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(0) }
                resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
                advance_auto GSSNode { expr: Many(Terminal(CharToken { token_type: "a" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(0) }
                    resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
                    advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                        resolve_to_terminals GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(1) }
                            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
processing CharToken { token_type: "a" }
Prev Layer: [GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }]
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
        advance_auto GSSNode { expr: Many(Terminal(CharToken { token_type: "a" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(0) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                resolve_to_terminals GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(1) }
                    resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
        advance_auto GSSNode { expr: Many(Terminal(CharToken { token_type: "a" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(0) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                resolve_to_terminals GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(1) }
                    resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
New Layer: [GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }]
processing CharToken { token_type: "a" }
Prev Layer: [GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }]
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
        advance_auto GSSNode { expr: Many(Terminal(CharToken { token_type: "a" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(0) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                resolve_to_terminals GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(1) }
                    resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
        advance_auto GSSNode { expr: Many(Terminal(CharToken { token_type: "a" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(0) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                resolve_to_terminals GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(1) }
                    resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
New Layer: [GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }]
processing CharToken { token_type: "a" }
Prev Layer: [GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }]
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
        advance_auto GSSNode { expr: Many(Terminal(CharToken { token_type: "a" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(0) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                resolve_to_terminals GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(1) }
                    resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
        advance_auto GSSNode { expr: Many(Terminal(CharToken { token_type: "a" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(0) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                resolve_to_terminals GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(1) }
                    resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
New Layer: [GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }]
processing CharToken { token_type: "b" }
Prev Layer: [GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }]
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
        advance_auto GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(1) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                resolve_to_terminals GSSNode { expr: Many(Terminal(CharToken { token_type: "c" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(2) }
                    resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
                    advance_auto GSSNode { expr: Many(Terminal(CharToken { token_type: "c" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(2) }
                        resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
                        advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                            resolve_to_terminals GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(3) }
                                resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "a" }), parent.expr: Many(Terminal(CharToken { token_type: "a" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
        advance_auto GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(1) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                resolve_to_terminals GSSNode { expr: Many(Terminal(CharToken { token_type: "c" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(2) }
                    resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
                    advance_auto GSSNode { expr: Many(Terminal(CharToken { token_type: "c" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(2) }
                        resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
                        advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                            resolve_to_terminals GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(3) }
                                resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
New Layer: [GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }]
processing CharToken { token_type: "b" }
Prev Layer: [GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }]
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
        advance_auto GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(1) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                resolve_to_terminals GSSNode { expr: Many(Terminal(CharToken { token_type: "c" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(2) }
                    resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
                    advance_auto GSSNode { expr: Many(Terminal(CharToken { token_type: "c" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(2) }
                        resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
                        advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                            resolve_to_terminals GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(3) }
                                resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
        advance_auto GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(1) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                resolve_to_terminals GSSNode { expr: Many(Terminal(CharToken { token_type: "c" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(2) }
                    resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
                    advance_auto GSSNode { expr: Many(Terminal(CharToken { token_type: "c" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(2) }
                        resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
                        advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                            resolve_to_terminals GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(3) }
                                resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
New Layer: [GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }]
processing CharToken { token_type: "b" }
Prev Layer: [GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }]
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
        advance_auto GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(1) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                resolve_to_terminals GSSNode { expr: Many(Terminal(CharToken { token_type: "c" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(2) }
                    resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
                    advance_auto GSSNode { expr: Many(Terminal(CharToken { token_type: "c" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(2) }
                        resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
                        advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                            resolve_to_terminals GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(3) }
                                resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
        advance_auto GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(1) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                resolve_to_terminals GSSNode { expr: Many(Terminal(CharToken { token_type: "c" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(2) }
                    resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
                    advance_auto GSSNode { expr: Many(Terminal(CharToken { token_type: "c" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(2) }
                        resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
                        advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                            resolve_to_terminals GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(3) }
                                resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
New Layer: [GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }]
processing CharToken { token_type: "d" }
Prev Layer: [GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }]
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
        advance_auto GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(3) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                advance_auto GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "b" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "b" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "c" }), parent.expr: Many(Terminal(CharToken { token_type: "c" })), parent_data: NoData }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
        advance_auto GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(3) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                advance_auto GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: NoData }
New Layer: [GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: Done }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: Done }]
processing CharToken { token_type: "d" }
Prev Layer: [GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: Done }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: Done }]
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
        advance_auto GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(3) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                advance_auto GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: NoData }
    advance_token GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: Done }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
        advance_auto GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(3) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                advance_auto GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: NoData }
    advance_token GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: Done }
New Layer: [GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: Done }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: Done }]
processing CharToken { token_type: "d" }
Prev Layer: [GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: Done }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: Done }]
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
        advance_auto GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(3) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                advance_auto GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: NoData }
    advance_token GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: Done }
    advance_token GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
        advance_auto GSSNode { expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent.expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent_data: Index(3) }
            resolve_to_terminals GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }
            advance_auto GSSNode { expr: Concatenation([Many(Terminal(CharToken { token_type: "a" })), OneOrMore(Terminal(CharToken { token_type: "b" })), Many(Terminal(CharToken { token_type: "c" })), OneOrMore(Terminal(CharToken { token_type: "d" }))]), parent.expr: RuleName("Rule"), parent_data: NoData }
                advance_auto GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: NoData }
    advance_token GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: Done }
New Layer: [GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: Done }, GSSNode { expr: Terminal(CharToken { token_type: "d" }), parent.expr: OneOrMore(Terminal(CharToken { token_type: "d" })), parent_data: NoData }, GSSNode { expr: RuleName("Rule"), parent.expr: "None", parent_data: Done }]
thread 'parse::tests::parsing_does_not_explode_many' panicked at 'not yet implemented', src/parse.rs:100:9
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace


failures:
    parse::tests::parsing_does_not_explode_many

test result: FAILED. 3 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

error: test failed, to rerun pass `--lib`
Parsley % 